{"version":3,"sources":["components/header/logo.svg","components/header/index.js","components/users/user.js","components/users/index.js","components/main/index.js","components/footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","src","logo","alt","className","React","Component","User","props","userClassName","role","firstname","lastname","age","email","isAdmin","active","onClick","handleLogin","Users","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","users","componentDidMount","bind","assertThisInitialized","_this2","newUsersState","map","stateUser","setState","user","_this3","UsersList","index","key","number","guestUsers","slice","length","find","filter","adminUsers","currentUser","console","log","Main","username","password","loading","submitted","error","e","_e$target","target","name","value","defineProperty","preventDefault","_this$state","setTimeout","onSubmit","handleSubmit","htmlFor","type","onChange","handleChange","placeholder","required","autoFocus","disabled","aria-hidden","users_Users","onLogout","Footer","App","header_Header","main_Main","footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6557360e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport logo from \"./logo.svg\";\n\nimport \"./style.css\";\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <img src={logo} alt=\"logo\" className=\"logo mb-4\" />\n      </header>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function User(props) {\n  let userClassName = \"user\";\n\n  if (props.role === \"admin\") {\n    userClassName += \" admin\";\n  }\n\n  if (props.role === \"guest\") {\n    userClassName += \" guest\";\n  }\n\n  return (\n    <li className={userClassName}>\n      {props.firstname} {props.lastname} - {props.age}ans - {props.email}\n      <span className=\"superuser\">{props.isAdmin ? \" (Admin)\" : \"\"}</span>\n      {!props.active && (\n        <button className=\"btn btn-primary btn-sm\" onClick={props.handleLogin}>\n          Login as\n        </button>\n      )}\n    </li>\n  );\n}\n","import React from \"react\";\n\nimport User from \"./user\";\n\nimport \"./style.css\";\n\nexport default class Users extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: [\n        {\n          firstname: \"Thomas\",\n          lastname: \"Dupont\",\n          age: 25,\n          email: \"thomas@email.com\",\n          isAdmin: false,\n          role: \"guest\",\n          active: false\n        },\n        {\n          firstname: \"Xavier\",\n          lastname: \"Martin\",\n          age: 28,\n          email: \"xavier@email.com\",\n          isAdmin: true,\n          role: \"admin\",\n          active: false\n        },\n        {\n          firstname: \"Paul\",\n          lastname: \"Moulin\",\n          age: 19,\n          email: \"paul@email.com\",\n          isAdmin: true,\n          role: \"admin\",\n          active: false\n        },\n        {\n          firstname: \"Michel\",\n          lastname: \"Michel\",\n          age: 32,\n          email: \"michel@email.com\",\n          isAdmin: false,\n          role: \"guest\",\n          active: false\n        }\n      ]\n    };\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.firstname) {\n      let newUsersState = this.state.users.map(stateUser => {\n        if (stateUser.firstname === this.props.firstname) {\n          stateUser.active = true;\n        }\n        return stateUser;\n      });\n\n      this.setState({\n        users: newUsersState\n      });\n    }\n  }\n\n  handleLogin(user) {\n    let newUsersState = this.state.users.map(stateUser => {\n      stateUser.active = false;\n      if (stateUser.email === user.email) {\n        stateUser.active = true;\n      }\n      return stateUser;\n    });\n\n    this.setState({\n      users: newUsersState\n    });\n  }\n\n  render() {\n    let UsersList = this.state.users.map((user, index) => {\n      return (\n        <User\n          key={\"user-\" + index}\n          number={index}\n          firstname={user.firstname}\n          lastname={user.lastname}\n          email={user.email}\n          age={user.age}\n          isAdmin={user.isAdmin}\n          role={user.role}\n          active={user.active}\n          handleLogin={() => this.handleLogin(user)}\n        />\n      );\n    });\n\n    //slice() renvoie un sous tableau couper par rapport au indices donnés\n    // eslint-disable-next-line\n    var firstHalfUsers = UsersList.slice(0, this.state.users.length / 2);\n\n    // eslint-disable-next-line\n    var secondHalfUsers = UsersList.slice(this.state.users.length / 2);\n\n    //find() retourne un seul element correspondant à une condition\n    // eslint-disable-next-line\n    let superUser = this.state.users.find(user => {\n      return user.isAdmin;\n    });\n\n    //filter() retourne un tableau de tous les elements correspondant à une condition\n    var guestUsers = UsersList.filter(user => {\n      return user.props.role === \"guest\";\n    });\n\n    var adminUsers = UsersList.filter(user => {\n      return user.props.role === \"admin\";\n    });\n\n    var currentUser = UsersList.find(user => {\n      return user.props.active;\n    });\n\n    console.log(currentUser);\n    return (\n      <div>\n        {currentUser && (\n          <div className=\"currentUser\">\n            <h4>Current User</h4>\n            <ul>{currentUser}</ul>\n          </div>\n        )}\n        <br />\n        <h3>Guest Users</h3>\n        <ul>{guestUsers}</ul>\n        <h3>Admin Users</h3>\n        <ul>{adminUsers}</ul>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport Users from \"../users/\";\n\nimport \"./style.css\";\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      submitted: false,\n      error: \"\"\n    };\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n    this.setState({ submitted: false });\n    console.log(name, value);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { username, password } = this.state;\n\n    //Si username ou password est vide on arrete l'executin de la fonction\n    if (!username || !password) {\n      return;\n    }\n\n    //Sinon on remet les champs à vide\n    e.target.username.value = \"\";\n    e.target.password.value = \"\";\n\n    // On fait le traitement après un temps de chargement\n    this.setState({ loading: true });\n\n    setTimeout(() => {\n      this.setState({\n        username: username,\n        password: password,\n        loading: false,\n        submitted: true\n      });\n    }, 2000);\n  }\n\n  onLogout() {\n    this.setState({ submitted: false });\n  }\n\n  render() {\n    let title = \"Login\";\n\n    return (\n      <main className=\"text-center\">\n        {!this.state.submitted && (\n          <form\n            name=\"form\"\n            onSubmit={e => this.handleSubmit(e)}\n            className=\"loginForm\"\n          >\n            <h1 className=\"h3 mb-3 font-weight-normal\">{title}</h1>\n            <label htmlFor=\"username\" className=\"sr-only\">\n              Username\n            </label>\n            <input\n              className=\"form-control mb-3\"\n              name=\"username\"\n              type=\"text\"\n              value={this.state.username}\n              onChange={e => this.handleChange(e)}\n              placeholder=\"Username\"\n              required\n              autoFocus\n            />\n            <label htmlFor=\"password\" className=\"sr-only\">\n              Password\n            </label>\n            <input\n              className=\"form-control mb-3\"\n              name=\"password\"\n              type=\"password\"\n              value={this.state.password}\n              onChange={e => this.handleChange(e)}\n              placeholder=\"Password\"\n              required\n            />\n            <div className=\"checkbox mb-3\">\n              <label>\n                <input type=\"checkbox\" value=\"remember-me\" /> Remember me\n              </label>\n            </div>\n            {/* {this.state.loading && <div className=\"spinner\"></div>} */}\n            {!this.state.loading && (\n              <button className=\"btn btn-lg btn-primary btn-block\">\n                Sign up\n              </button>\n            )}\n            {this.state.loading && (\n              <button\n                className=\"btn btn-lg btn-primary btn-block\"\n                type=\"button\"\n                disabled\n              >\n                <span\n                  className=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                />\n                Loading...\n              </button>\n            )}\n          </form>\n        )}\n        {/* Si le formulaire est validé on affiche la liste des utilisateurs */}\n        {this.state.submitted && (\n          <div>\n            <Users firstname={this.state.username} />\n            <button\n              className=\"btn btn-lg btn-primary\"\n              onClick={() => this.onLogout()}\n            >\n              Logout\n            </button>\n          </div>\n        )}\n      </main>\n    );\n  }\n}\n","import React from \"react\";\n\nimport \"./style.css\";\n\nexport default class Footer extends React.Component {\n  render() {\n    return (\n      <footer>\n        <p>All rights reserved - © 2019</p>\n      </footer>\n    );\n  }\n}\n","import React from \"react\";\nimport Header from \"./components/header/\";\nimport Main from \"./components/main/\";\nimport Footer from \"./components/footer/\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}